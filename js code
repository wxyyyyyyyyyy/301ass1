<script>

  let result = document.getElementById('result');
  function clearResult() {
    document.getElementById("result").value = '';
  }

  function deleteLastChar() {
    let result = document.getElementById("result").value;
    document.getElementById("result").value = result.slice(0, -1);
  }

  function appendChar(char) {
    let result = document.getElementById("result").value;
    document.getElementById("result").value = result + char;
  }

  function calculateResult() {
    let result = document.getElementById("result").value;
    let calculatedResult = eval(result);
    document.getElementById("result").value = calculatedResult;
    saveResult(result, calculatedResult);

    // 将历史记录保存到localStorage中
    let history = localStorage.getItem("history");
    if (history) {
      history = JSON.parse(history);
    } else {
      history = [];
    }
    history.push(result + " = " + calculatedResult);
    localStorage.setItem("history", JSON.stringify(history));
  }
  function calculateSquare() {
    let result = document.getElementById("result").value;
    let calculatedResult = eval(result) ** 2;
    document.getElementById("result").value = calculatedResult;
  }

  function calculateSquareRoot() {
    let result = document.getElementById("result").value;
    let calculatedResult = Math.sqrt(eval(result));
    document.getElementById("result").value = calculatedResult;
  }

  function calculateCos() {
    try {
      result.value = Math.cos(eval(result.value));
    } catch (error) {
      result.value = 'ERROR';
    }
  }

  function calculateSin() {
    try {
      result.value = Math.sin(eval(result.value));
    } catch (error) {
      result.value = 'ERROR';
    }
  }

  function calculateTan() {
    try {
      result.value = Math.tan(eval(result.value));
    } catch (error) {
      result.value = 'ERROR';
    }
  }

  function calculateLog10() {
    let result = document.getElementById("result").value;
    let calculatedResult = Math.log10(eval(result));
    document.getElementById("result").value = calculatedResult;
  }

  function calculateLn() {
    let result = document.getElementById("result").value;
    let calculatedResult = Math.log(eval(result));
    document.getElementById("result").value = calculatedResult;
  }

  function calculateScientificNotation() {
    try {
      result.value = eval(result.value).toExponential();
    } catch (error) {
      result.value = 'ERROR';
    }
  }
  function calculatePower() {
    let result = document.getElementById("result").value;
    let parts = result.split('^');
    if (parts.length === 2) {
      let base = parseFloat(parts[0]);
      let exponent = parseFloat(parts[1]);
      let calculatedResult = Math.pow(base, exponent);
      document.getElementById("result").value = calculatedResult;
    }
  }
  function calculateInverse() {
    let result = document.getElementById("result").value;
    let calculatedResult = 1 / eval(result);
    document.getElementById("result").value = calculatedResult;
  }

  async function displayHistory() {
    let history = await getPreviousResults()
    console.log(history, 'history');
    let historyList = document.getElementById("history-list");
    historyList.innerHTML = "";

    for (let i = 0; i < history.length; i++) {
      let item = document.createElement("li");
      item.textContent = `${history[i].expression}=${history[i].result}`;
      historyList.appendChild(item);
    }
  }
  function clearHistory() {
    // localStorage.removeItem("history");
    removeHistory().then(res => {
      displayHistory();
    })
  }
  function saveResult(expression, result) {
    $.ajax({
      url: "http://localhost:3000/saveResult",
      type: "POST",
      data: {
        expression: expression,
        result: result
      },
      success: function (response) {
        console.log(response);
        displayHistory()
      },
      error: function () {
        console.log("Error saving result");
      }
    });
  }

  function getPreviousResults() {
    return new Promise((resolve, reject) => {
      $.ajax({
        url: "http://localhost:3000/getPreviousResults",
        type: "GET",
        success: function (response) {
          console.log(response);
          resolve(response)
        },
        error: function () {
          reject()
          console.log("Error getting previous results");
        }
      });
    })
  }
  function removeHistory() {
    return new Promise((resolve, reject) => {
      $.ajax({
        url: "http://localhost:3000/removePreviousResults",
        type: "POST",
        success: function (response) {
          console.log(response);
          resolve(response)
        },
        error: function () {
          reject()
          console.log("Error getting previous results");
        }
      });
    })
  }
</script>




